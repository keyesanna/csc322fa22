const renderer = new THREE.WebGLRenderer();
renderer.setSize(window.innerWidth, window.innerHeight);
document.body.appendChild(renderer.domElement);

const camera = new THREE.PerspectiveCamera(45, window.innerWidth/window.innerHeight, 1, 500);
camera.position.set(0, 0, 100);
camera.lookAt(0, 0, 0);

const scene = new THREE.Scene();

const material = new THREE.LineBasicMaterial({color: 0xfffffff});

const points = [];
//completes first face
points.push(new THREE.Vector3(-5, 0, 0));
points.push(new THREE.Vector3(0, -10, 0));
points.push(new THREE.Vector3(5, 0, 0));
points.push(new THREE.Vector3(-5, 0, 0));
//completes second face
points.push(new THREE.Vector3(0, -5, 10));
points.push(new THREE.Vector3(5, 0, 0));
//completes third and fourth faces
points.push(new THREE.Vector3(0, -5, 10));
points.push(new THREE.Vector3(0, -10, 0));

const geometry = new THREE.BufferGeometry().setFromPoints(points);

const line = new THREE.Line(geometry, material);

scene.add(line);
renderer.render(scene, camera);
